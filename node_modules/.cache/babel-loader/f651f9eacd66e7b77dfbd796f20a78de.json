{"ast":null,"code":"import _defineProperty from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Form, Input } from \"semantic-ui-react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\nimport Modal from \"react-responsive-modal\";\nimport \"./../assets/Main.css\";\nvar today = new Date();\nvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      show: false,\n      startDate: _this.getStartDate(),\n      endDate: _this.getEndDate(),\n      values: _this.getEmptyValues(_this.getStartDate())\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"calcColor\",\n    value: function calcColor(inputs) {\n      return parseInt(inputs[0]) + parseInt(inputs[1]) + parseInt(inputs[2]);\n    }\n  }, {\n    key: \"getStartDate\",\n    value: function getStartDate() {\n      return new Date(2018, 11, 1);\n    }\n  }, {\n    key: \"getEndDate\",\n    value: function getEndDate() {\n      return new Date(2018, 11, 31);\n    }\n  }, {\n    key: \"getEmptyValues\",\n    value: function getEmptyValues(date) {\n      var _this2 = this;\n\n      var n = 0;\n\n      if ([1, 3, 5, 7, 8, 10, 12].includes(date.getMonth() + 1)) {\n        n = 31;\n      } else if ([4, 6, 9, 11].includes(date.getMonth() + 1)) {\n        n = 30;\n      } else {\n        n = 29;\n      }\n\n      return this.getRange(n).map(function (index) {\n        return {\n          date: _this2.shiftDate(_this2.getStartDate(), index),\n          colorValue: 0\n        };\n      });\n    }\n  }, {\n    key: \"getDateData\",\n    value: function getDateData(date) {\n      return \"\".concat(monthNames[date.getMonth()], \" \").concat(date.getDate(), \", \").concat(date.getFullYear());\n    }\n  }, {\n    key: \"shiftDate\",\n    value: function shiftDate(date, numDays) {\n      var newDate = new Date(date);\n      newDate.setDate(newDate.getDate() + numDays);\n      return newDate;\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(count) {\n      return Array.from({\n        length: count\n      }, function (_, i) {\n        return i;\n      });\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      this.setState(_defineProperty({}, name, event.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var cur = this.state.values;\n      cur[this.state.date] = {\n        date: cur[this.state.date].date,\n        colorValue: this.calcColor([this.state.input1, this.state.input2, this.state.input3])\n      };\n      this.setState({\n        values: cur\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(this.state.values);\n      return React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calendar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(CalendarHeatmap, {\n        startDate: this.shiftDate(today, -150),\n        endDate: today,\n        values: this.getEmptyValues(this.get),\n        showMonthLabels: false,\n        showOutOfRangeDays: false,\n        classForValue: function classForValue(value) {\n          if (!value) {\n            return \"color-null\";\n          } else if (value.colorValue == 0) {\n            return \"color-empty\";\n          }\n\n          return \"color-gitlab-\".concat(value.colorValue);\n        },\n        tooltipDataAttrs: function tooltipDataAttrs(value) {\n          return {\n            \"data-tip\": \"\".concat(value.date.toISOString().slice(0, 10), \" has color value: \").concat(value.colorValue)\n          };\n        },\n        onClick: function onClick(value) {\n          if (value) {\n            _this3.setState({\n              currentDate: _this3.getDateData(value.date)\n            });\n\n            _this3.setState({\n              date: value.date.getDate()\n            });\n\n            _this3.openModal();\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(ReactTooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        open: this.state.show,\n        onClose: this.closeModal,\n        center: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"modalHeading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Update Mood!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \" Update your mood for \", this.state.currentDate, \" \"), React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Input1:\", React.createElement(Input, {\n        type: \"text\",\n        name: \"input1\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Input2:\", React.createElement(Input, {\n        type: \"text\",\n        name: \"input2\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Input3:\", React.createElement(Input, {\n        type: \"text\",\n        name: \"input3\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Input, {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js"],"names":["React","Component","Grid","Form","Input","CalendarHeatmap","ReactTooltip","Modal","today","Date","monthNames","Calendar","props","state","show","startDate","getStartDate","endDate","getEndDate","values","getEmptyValues","openModal","bind","closeModal","handleChange","handleSubmit","inputs","parseInt","date","n","includes","getMonth","getRange","map","index","shiftDate","colorValue","getDate","getFullYear","numDays","newDate","setDate","count","Array","from","length","_","i","setState","event","name","target","value","cur","calcColor","input1","input2","input3","preventDefault","console","log","get","toISOString","slice","currentDate","getDateData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Form, Input } from \"semantic-ui-react\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\nimport Modal from \"react-responsive-modal\";\n\nimport \"./../assets/Main.css\";\n\nconst today = new Date();\n\nconst monthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      startDate: this.getStartDate(),\n      endDate: this.getEndDate(),\n      values: this.getEmptyValues(this.getStartDate())\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  calcColor(inputs) {\n    return parseInt(inputs[0]) + parseInt(inputs[1]) + parseInt(inputs[2]);\n  }\n\n  getStartDate() {\n    return new Date(2018, 11, 1);\n  }\n\n  getEndDate() {\n    return new Date(2018, 11, 31);\n  }\n\n  getEmptyValues(date) {\n    var n = 0;\n    if ([1, 3, 5, 7, 8, 10, 12].includes(date.getMonth() + 1)) {\n      n = 31;\n    } else if ([4, 6, 9, 11].includes(date.getMonth() + 1)) {\n      n = 30;\n    } else {\n      n = 29;\n    }\n\n    return this.getRange(n).map(index => {\n      return {\n        date: this.shiftDate(this.getStartDate(), index),\n        colorValue: 0\n      };\n    });\n  }\n\n  getDateData(date) {\n    return `${\n      monthNames[date.getMonth()]\n    } ${date.getDate()}, ${date.getFullYear()}`;\n  }\n\n  shiftDate(date, numDays) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numDays);\n    return newDate;\n  }\n\n  getRange(count) {\n    return Array.from({ length: count }, (_, i) => i);\n  }\n\n  openModal() {\n    this.setState({ show: true });\n  }\n\n  closeModal() {\n    this.setState({ show: false });\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    this.setState({ [name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    let cur = this.state.values;\n    cur[this.state.date] = {\n      date: cur[this.state.date].date,\n      colorValue: this.calcColor([\n        this.state.input1,\n        this.state.input2,\n        this.state.input3\n      ])\n    };\n\n    this.setState({ values: cur });\n    event.preventDefault();\n  }\n\n  componentDidMount() {}\n\n  render() {\n    console.log(this.state.values);\n    return (\n      <div className=\"mainContainer\">\n        <Grid>\n          <div className=\"calendar-container\">\n            <CalendarHeatmap\n              startDate={this.shiftDate(today, -150)}\n              endDate={today}\n              values={this.getEmptyValues(this.get)}\n              showMonthLabels={false}\n              showOutOfRangeDays={false}\n              classForValue={value => {\n                if (!value) {\n                  return \"color-null\";\n                } else if (value.colorValue == 0) {\n                  return \"color-empty\";\n                }\n                return `color-gitlab-${value.colorValue}`;\n              }}\n              tooltipDataAttrs={value => {\n                return {\n                  \"data-tip\": `${value.date\n                    .toISOString()\n                    .slice(0, 10)} has color value: ${value.colorValue}`\n                };\n              }}\n              onClick={value => {\n                if (value) {\n                  this.setState({ currentDate: this.getDateData(value.date) });\n                  this.setState({ date: value.date.getDate() });\n                  this.openModal();\n                }\n              }}\n            />\n          </div>\n          <ReactTooltip />\n\n          <Modal open={this.state.show} onClose={this.closeModal} center>\n            <h2 className=\"modalHeading\">Update Mood!</h2>\n            <p> Update your mood for {this.state.currentDate} </p>\n            <Form onSubmit={this.handleSubmit}>\n              <label>\n                Input1:\n                <Input type=\"text\" name=\"input1\" onChange={this.handleChange} />\n              </label>\n              <label>\n                Input2:\n                <Input type=\"text\" name=\"input2\" onChange={this.handleChange} />\n              </label>\n              <label>\n                Input3:\n                <Input type=\"text\" name=\"input3\" onChange={this.handleChange} />\n              </label>\n\n              <Input type=\"submit\" value=\"Submit\" />\n            </Form>\n          </Modal>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}