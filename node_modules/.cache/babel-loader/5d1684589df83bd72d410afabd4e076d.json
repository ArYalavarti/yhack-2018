{"ast":null,"code":"import _classCallCheck from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\nimport Modal from \"react-responsive-modal\";\nimport \"./../assets/Main.css\";\nvar today = new Date();\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      open: false,\n      startDate: _this.getStartDate(),\n      endDate: _this.getEndDate(),\n      values: _this.getValues()\n    };\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"getStartDate\",\n    value: function getStartDate() {\n      return new Date(\"2018-12-01\");\n    }\n  }, {\n    key: \"getEndDate\",\n    value: function getEndDate() {\n      return new Date(\"2018-12-31\");\n    }\n  }, {\n    key: \"getValues\",\n    value: function getValues() {\n      var _this2 = this;\n\n      return this.getRange(31).map(function (index) {\n        return {\n          date: _this2.shiftDate(today, index),\n          count: 0\n        };\n      });\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(curValue) {\n      this.handleShow();\n    }\n  }, {\n    key: \"shiftDate\",\n    value: function shiftDate(date, numDays) {\n      var newDate = new Date(date);\n      newDate.setDate(newDate.getDate() + numDays);\n      return newDate;\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(count) {\n      return Array.from({\n        length: count\n      }, function (_, i) {\n        return i;\n      });\n    }\n  }, {\n    key: \"getRandomInt\",\n    value: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  }, {\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calendar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(CalendarHeatmap, {\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        values: this.state.values,\n        showOutOfRangeDays: true,\n        classForValue: function classForValue(value) {\n          if (!value) {\n            return \"color-null\";\n          } else if (value.count == 0) {\n            return \"color-empty\";\n          }\n\n          return \"color-gitlab-\".concat(value.count);\n        },\n        tooltipDataAttrs: function tooltipDataAttrs(value) {},\n        onClick: function onClick(value) {\n          return _this3.updateValue(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(ReactTooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.openModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Open Modal\"), React.createElement(Modal, {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        contentLabel: \"Example Modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        ref: function ref(subtitle) {\n          return _this3.subtitle = subtitle;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Hello\"), React.createElement(\"button\", {\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"close\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"I am a modal\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"tab navigation\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"stays\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"inside\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"the modal\")))))));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js"],"names":["React","Component","Grid","Row","Col","Button","CalendarHeatmap","ReactTooltip","Modal","today","Date","Calendar","props","state","open","startDate","getStartDate","endDate","getEndDate","values","getValues","openModal","bind","closeModal","getRange","map","index","date","shiftDate","count","curValue","handleShow","numDays","newDate","setDate","getDate","Array","from","length","_","i","min","max","Math","floor","random","setState","modalIsOpen","value","updateValue","afterOpenModal","subtitle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Row, Col, Button } from \"react-bootstrap\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\nimport Modal from \"react-responsive-modal\";\n\nimport \"./../assets/Main.css\";\n\nconst today = new Date();\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      startDate: this.getStartDate(),\n      endDate: this.getEndDate(),\n      values: this.getValues()\n    };\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n  getStartDate() {\n    return new Date(\"2018-12-01\");\n  }\n\n  getEndDate() {\n    return new Date(\"2018-12-31\");\n  }\n\n  getValues() {\n    return this.getRange(31).map(index => {\n      return {\n        date: this.shiftDate(today, index),\n        count: 0\n      };\n    });\n  }\n\n  updateValue(curValue) {\n    this.handleShow();\n  }\n\n  shiftDate(date, numDays) {\n    const newDate = new Date(date);\n    newDate.setDate(newDate.getDate() + numDays);\n    return newDate;\n  }\n\n  getRange(count) {\n    return Array.from({ length: count }, (_, i) => i);\n  }\n\n  getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"mainContainer\">\n        <Grid>\n          <Row className=\"show-grid\">\n            <Col sm={12} md={12}>\n              <div className=\"calendar-container\">\n                <CalendarHeatmap\n                  startDate={this.state.startDate}\n                  endDate={this.state.endDate}\n                  values={this.state.values}\n                  showOutOfRangeDays={true}\n                  classForValue={value => {\n                    if (!value) {\n                      return \"color-null\";\n                    } else if (value.count == 0) {\n                      return \"color-empty\";\n                    }\n                    return `color-gitlab-${value.count}`;\n                  }}\n                  tooltipDataAttrs={value => {}}\n                  onClick={value => this.updateValue(value)}\n                />\n              </div>\n              <ReactTooltip />\n              <Button onClick={this.openModal}>Open Modal</Button>\n              <Modal\n                isOpen={this.state.modalIsOpen}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                contentLabel=\"Example Modal\"\n              >\n                <h2 ref={subtitle => (this.subtitle = subtitle)}>Hello</h2>\n                <button onClick={this.closeModal}>close</button>\n                <div>I am a modal</div>\n                <form>\n                  <input />\n                  <button>tab navigation</button>\n                  <button>stays</button>\n                  <button>inside</button>\n                  <button>the modal</button>\n                </form>\n              </Modal>\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}