{"ast":null,"code":"import _classCallCheck from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arvindyalavarti/dev/YHack/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js\";\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./../assets/Main.css\";\n\nfunction getStartDate() {\n  return new Date('2018-12-01');\n}\n\nfunction getEndDate() {\n  return new Date('2018-12-31');\n}\n\nfunction getValues() {\n  return getRange(31).map(function (index) {\n    return {\n      date: shiftDate(today, index),\n      count: 0\n    };\n  });\n}\n\nvar today = new Date();\nvar randomValues = getRange(200).map(function (index) {\n  return {\n    date: shiftDate(today, -index),\n    count: getRandomInt(1, 3)\n  };\n});\n\nfunction shiftDate(date, numDays) {\n  var newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\n\nfunction getRange(count) {\n  return Array.from({\n    length: count\n  }, function (_, i) {\n    return i;\n  });\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n    _this.state = {\n      startDate: getStartDate(),\n      endDate: getEndDate(),\n      values: getValues()\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mainContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"calendar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(CalendarHeatmap, {\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        values: this.state.values,\n        showOutOfRangeDays: true,\n        classForValue: function classForValue(value) {\n          if (!value) {\n            return \"color-null\";\n          } else if (count == 0) {\n            return \"color-empty\";\n          }\n\n          return \"color-gitlab-\".concat(value.count);\n        },\n        tooltipDataAttrs: function tooltipDataAttrs(value) {},\n        onClick: function onClick(value) {\n          return console.log(value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(ReactTooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Calendar;\n}(Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/arvindyalavarti/dev/YHack/src/components/Calendar.js"],"names":["React","Component","Grid","Row","Col","CalendarHeatmap","ReactTooltip","getStartDate","Date","getEndDate","getValues","getRange","map","index","date","shiftDate","today","count","randomValues","getRandomInt","numDays","newDate","setDate","getDate","Array","from","length","_","i","min","max","Math","floor","random","Calendar","props","state","startDate","endDate","values","value","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport \"./../assets/Main.css\";\n\nfunction getStartDate() {\n  return new Date('2018-12-01');\n}\n\nfunction getEndDate() {\n  return new Date('2018-12-31');\n}\n\nfunction getValues() {\n  return getRange(31).map(index => {\n    return {\n      date: shiftDate(today, index),\n      count: 0\n    };\n  });\n}\n\nconst today = new Date();\n\nconst randomValues = getRange(200).map(index => {\n  return {\n    date: shiftDate(today, -index),\n    count: getRandomInt(1, 3)\n  };\n});\n\nfunction shiftDate(date, numDays) {\n  const newDate = new Date(date);\n  newDate.setDate(newDate.getDate() + numDays);\n  return newDate;\n}\n\nfunction getRange(count) {\n  return Array.from({ length: count }, (_, i) => i);\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: getStartDate(),\n      endDate: getEndDate(),\n      values: getValues()\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return (\n      <div className=\"mainContainer\">\n        <Grid>\n          <Row className=\"show-grid\">\n            <Col sm={12} md={12}>\n              <div className=\"calendar-container\">\n                <CalendarHeatmap\n                  startDate={this.state.startDate}\n                  endDate={this.state.endDate}\n                  values={this.state.values}\n                  showOutOfRangeDays={true}\n                  classForValue={value => {\n                    if (!value) {\n                      return \"color-null\";\n                    } else if (count == 0) {\n                      return \"color-empty\"\n                    }\n                    return `color-gitlab-${value.count}`;\n                  }}\n                  tooltipDataAttrs={value => {}}\n                  onClick={value =>\n                    console.log(value)\n                  }\n                />\n              </div>\n              <ReactTooltip />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}